swagger: '2.0'
info:
  title: Bank Argent API documentation Mk2 (consulting)
  description: Contains all available API endpoints in this codebase
  version: '1.1.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /accounts/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: User accounts API
      description: API for fetching transactions
      #produces:
       # - application/json
      responses:
        '200':
          description: Accounts and transactions retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Access denied
        '500':
          description: Internal Server Error
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: New transactions
      description: API for creating transactions
      parameters:
        - in: body
          name: body
          description: Update transaction note
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Access denied
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update
      description: API for updating a transaction
      parameters:
        - in: body
          name: body
          description: Update transaction note
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Access denied
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: User accounts API
      description: API for updating a transaction
      parameters:
        - in: body
          name: body
          description: Update transaction note
          required: true
          schema:
            $ref: '#/definitions/TransactionNote'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Access denied
        '500':
          description: Internal Server Error
  /accounts/transaction:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: User accounts API
      description: API for reading a specific transaction
      parameters:
        - in: body
          name: body
          description: Fetching a transaction by its id
          required: true
          schema:
            $ref: '#/definitions/TransactionId'
      #produces:
       # - application/json
      responses:
        '200':
          description: Accounts and transactions retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Access denied
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  Transaction:
    properties:
      id:
        type: string
        description: unique id of the transaction 
      accountId:
        type: string
        description: unique id of the account where the transaction occures
      date:
        type: string
        description: date of transaction
      title:
        type: string
        description: description of the transaction
      amount:
        type: number
        description: amount of the transaction
      type:
        type: string
        description: type of transaction
      category:
        type: string
        description: category of transaction
      note:
        type: string
        description: note about the transaction (facultative)
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  TransactionNote:
    type: object
    properties:
      note:
        type: string
  TransactionId:
    type: object
    properties:
      Id:
        type: string
